CREATE TABLE TIPO_INFORMACION
(
	COD_TIPO_INFORMACION INT NOT NULL IDENTITY PRIMARY KEY,
	NOMBRE VARCHAR(100) NOT NULL
)

CREATE TABLE TIPO
(
	COD_TIPO INT NOT NULL IDENTITY PRIMARY KEY, 
	NOMBRE VARCHAR(100) NOT NULL
)

CREATE TABLE FORMATO_MENSAJE
(
	COD_FORMATO INT NOT NULL IDENTITY PRIMARY KEY, 
	COD_TIPO INT NOT NULL FOREIGN KEY REFERENCES TIPO(COD_TIPO),
	COD_TIPO_INFORMACION INT NOT NULL FOREIGN KEY REFERENCES TIPO_INFORMACION(COD_TIPO_INFORMACION),
	NOMBRE VARCHAR(100) NOT NULL, 
	REMITENTE VARCHAR(125) NOT NULL, 
	ASUNTO VARCHAR(250) NOT NULL
)

CREATE TABLE PROYECTO 
(
	COD_PROYECTO INT NOT NULL IDENTITY PRIMARY KEY, 
	NOMBRE VARCHAR(100) NOT NULL
)

CREATE TABLE PRODUCTO 
(
	COD_PRODUCTO INT NOT NULL IDENTITY PRIMARY KEY,
	DESCRIPCION VARCHAR(100) NOT NULL 
)

CREATE TABLE PRODUCTO_PROYECTO
(
	COD_PRODUCTO_PROYECTO INT NOT NULL IDENTITY PRIMARY KEY, 
	COD_PROYECTO INT NOT NULL FOREIGN KEY REFERENCES PROYECTO(COD_PROYECTO),
	COD_PRODUCTO INT NOT NULL FOREIGN KEY REFERENCES PRODUCTO(COD_PRODUCTO) 
)

CREATE TABLE MENSAJE
(
	COD_MENSAJE INT NOT NULL PRIMARY KEY, 
	COD_FORMATO INT NOT NULL FOREIGN KEY REFERENCES FORMATO_MENSAJE(COD_FORMATO),
	COD_PRODUCTO_PROYECTO INT NOT NULL FOREIGN KEY REFERENCES PRODUCTO_PROYECTO(COD_PRODUCTO_PROYECTO)
)

INSERT INTO PROYECTO (NOMBRE) VALUES ('Premia'), ('Konmi'), ('Yujule')
INSERT INTO PRODUCTO (DESCRIPCION) VALUES ('Premia Clásica'), ('Premia'), ('Oro'), ('Premia Platinum')
INSERT INTO TIPO (NOMBRE) VALUES ('mensaje de texto'), ('mail'), ('mensaje en el estado de cuenta')
INSERT INTO TIPO_INFORMACION (NOMBRE) VALUES ('mensaje de bienvenida'), ('mensaje de mora'), ('mensaje de promoción')



-- A.Escriba la consulta en SQL que devuelva el nombre del proyecto y sus productos correspondientes del proyecto premia cuyo código es 1

SELECT 
	PRODUCTO.DESCRIPCION AS NOMBRE_PRODUCTO,
	PROYECTO.NOMBRE AS NOMBRE_PROYECTO
FROM 
	PRODUCTO_PROYECTO, 
	PROYECTO, 
	PRODUCTO
WHERE 
	PROYECTO.COD_PROYECTO = 1 
	AND PRODUCTO_PROYECTO.COD_PROYECTO = PROYECTO.COD_PROYECTO 
	AND PRODUCTO_PROYECTO.COD_PRODUCTO = PRODUCTO.COD_PRODUCTO


-- B. Escriba una consulta SQL que devuelva los distintos mensajes que hay, indicando a qué proyecto y producto pertenecen.

SELECT 
	MENSAJE.COD_MENSAJE,
	PROYECTO.NOMBRE AS NOMBRE_PROYECTO,
	PRODUCTO.DESCRIPCION  AS NOMBRE_PRODUCTO,
	FORMATO_MENSAJE.NOMBRE,
	FORMATO_MENSAJE.REMITENTE,
	FORMATO_MENSAJE.ASUNTO
FROM 
	MENSAJE
	LEFT JOIN PRODUCTO_PROYECTO ON PRODUCTO_PROYECTO.COD_PRODUCTO_PROYECTO = MENSAJE.COD_PRODUCTO_PROYECTO 
	LEFT JOIN PROYECTO ON PRODUCTO_PROYECTO.COD_PROYECTO = PROYECTO.COD_PROYECTO
	LEFT JOIN PRODUCTO ON PRODUCTO_PROYECTO.COD_PRODUCTO = PRODUCTO.COD_PRODUCTO
	LEFT JOIN FORMATO_MENSAJE ON FORMATO_MENSAJE.COD_FORMATO = MENSAJE.COD_FORMATO


-- C.Escriba una consulta SQL que devuelva los distintos mensajes que hay, indicando a qué proyecto y producto pertenecen. Pero si el mensaje está en todos los productos de un
-- proyecto, en lugar de mostrar cada producto, debe mostrar el nombre del proyecto y un solo producto que diga “TODOS”.




SELECT 
	MENSAJE.COD_MENSAJE,
	PROYECTO.NOMBRE AS NOMBRE_PROYECTO,
  CASE
    WHEN COUNT(DISTINCT PRODUCTO_PROYECTO.COD_PRODUCTO) = (SELECT COUNT(*) FROM MENSAJE, PRODUCTO_PROYECTO WHERE MENSAJE.COD_PRODUCTO_PROYECTO = PRODUCTO_PROYECTO.COD_PRODUCTO_PROYECTO AND PRODUCTO_PROYECTO.COD_PRODUCTO = PRODUCTO.COD_PRODUCTO) THEN 'TODOS'
    ELSE PRODUCTO.DESCRIPCION
  END AS NOMBRE_PRODUCTO,
	PRODUCTO.DESCRIPCION  AS NOMBRE_PRODUCTO,
	FORMATO_MENSAJE.NOMBRE,
	FORMATO_MENSAJE.REMITENTE,
	FORMATO_MENSAJE.ASUNTO
FROM 
	MENSAJE
	LEFT JOIN PRODUCTO_PROYECTO ON PRODUCTO_PROYECTO.COD_PRODUCTO_PROYECTO = MENSAJE.COD_PRODUCTO_PROYECTO 
	LEFT JOIN PROYECTO ON PRODUCTO_PROYECTO.COD_PROYECTO = PROYECTO.COD_PROYECTO
	LEFT JOIN PRODUCTO ON PRODUCTO_PROYECTO.COD_PRODUCTO = PRODUCTO.COD_PRODUCTO
	LEFT JOIN FORMATO_MENSAJE ON FORMATO_MENSAJE.COD_FORMATO = MENSAJE.COD_FORMATO

